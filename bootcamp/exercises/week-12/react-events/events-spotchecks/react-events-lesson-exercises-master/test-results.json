{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":1,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":3,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1556639831990,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise5 › You should define a \"displayConvo\" method that updates the state value of displayConversation\u001b[39m\u001b[22m\n\n    TypeError: wrapper.instance(...).displayConvo is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m    it(\u001b[32m'You should define a \"displayConvo\" method that updates the state value of displayConversation'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mExercise2\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 18 | \u001b[39m        wrapper\u001b[33m.\u001b[39minstance()\u001b[33m.\u001b[39mdisplayConvo(\u001b[32m\"Dad\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mstate()\u001b[33m.\u001b[39mdisplayConversation\u001b[33m,\u001b[39m \u001b[32m'The displayConvo method should update the state value of displayConversation to a given name'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m            \u001b[33m.\u001b[39mtoBe(\u001b[32m\"Dad\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.displayConvo (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-5.test.js\u001b[39m\u001b[0m\u001b[2m:18:28)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise5 › Each Contact should update the state of displayConversation to be the name of that contact\u001b[39m\u001b[22m\n\n    Method “props” is meant to be run on 1 node. 0 found instead.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m    it(\u001b[32m'Each Contact should update the state of displayConversation to be the name of that contact'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mExercise2\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 24 | \u001b[39m        let contactProps \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[33mContact\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mprops()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        expect(\u001b[36mtypeof\u001b[39m contactProps\u001b[33m.\u001b[39mname\u001b[33m,\u001b[39m \u001b[32m'You should pass a string prop \"name\" to your Contact component'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m            \u001b[33m.\u001b[39mtoBe(\u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m        expect(\u001b[36mtypeof\u001b[39m contactProps\u001b[33m.\u001b[39mdisplayConvo\u001b[33m,\u001b[39m \u001b[32m\"You should pass a method prop 'displayConvo' to your Contact component\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ReactWrapper.single (\u001b[2m\u001b[0m\u001b[36mnode_modules/enzyme/build/ReactWrapper.js\u001b[39m\u001b[0m\u001b[2m:1718:17)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ReactWrapper.props (\u001b[2m\u001b[0m\u001b[36mnode_modules/enzyme/build/ReactWrapper.js\u001b[39m\u001b[0m\u001b[2m:1013:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.props (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-5.test.js\u001b[39m\u001b[0m\u001b[2m:24:58)\u001b[2m\u001b[22m\n","numFailingTests":2,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1556639836570,"start":1556639833868},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/tests/exercises/ex-5.test.js","testResults":[{"ancestorTitles":["exercise5"],"duration":13,"failureMessages":[],"fullName":"exercise5 Application should render without crashing","location":null,"numPassingAsserts":0,"status":"passed","title":"Application should render without crashing"},{"ancestorTitles":["exercise5"],"duration":16,"failureMessages":["TypeError: wrapper.instance(...).displayConvo is not a function\n    at Object.displayConvo (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/tests/exercises/ex-5.test.js:18:28)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise5 You should define a \"displayConvo\" method that updates the state value of displayConversation","location":null,"numPassingAsserts":0,"status":"failed","title":"You should define a \"displayConvo\" method that updates the state value of displayConversation"},{"ancestorTitles":["exercise5"],"duration":13,"failureMessages":["Error: Method “props” is meant to be run on 1 node. 0 found instead.\n    at ReactWrapper.single (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/enzyme/build/ReactWrapper.js:1718:17)\n    at ReactWrapper.props (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/enzyme/build/ReactWrapper.js:1013:21)\n    at Object.props (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/tests/exercises/ex-5.test.js:24:58)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/react-events-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise5 Each Contact should update the state of displayConversation to be the name of that contact","location":null,"numPassingAsserts":0,"status":"failed","title":"Each Contact should update the state of displayConversation to be the name of that contact"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}